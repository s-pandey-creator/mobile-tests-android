{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)", "trace": "@pytest.fixture(scope=\"function\")\n    def driver():\n        \"\"\"\n        Simple driver fixture.\n        Set USE_BROWSERSTACK=1 and BROWSERSTACK_* vars to run on BrowserStack.\n        For local runs set PLATFORM=android and LOCAL_APK_PATH to your apk.\n        \"\"\"\n        platform = PLATFORM\n        driver = None\n        try:\n            if USE_BROWSERSTACK:\n>               driver = _create_browserstack_driver(platform)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:64: in _create_browserstack_driver\n    return webdriver.Remote(hub, caps)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:249: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x24c67e4b380>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x0000024C67E4B620>, keep_alive = True\nfile_detector = None, options = None\nlocator_converter = <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x0000024C67E4B770>\nweb_element_cls = <class 'appium.webdriver.webelement.WebElement'>\nclient_config = <appium.webdriver.client_config.AppiumClientConfig object at 0x0000024C67E4B4D0>\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, list[BaseOptions]]] = None,\n        locator_converter: Optional[LocatorConverter] = None,\n        web_element_cls: Optional[type[WebElement]] = None,\n        client_config: Optional[ClientConfig] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        Parameters:\n        -----------\n        command_executor : str or remote_connection.RemoteConnection\n            - Either a string representing the URL of the remote server or a custom\n            remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n        keep_alive : bool (Deprecated)\n            - Whether to configure remote_connection.RemoteConnection to use HTTP keep-alive. Defaults to True.\n        file_detector : object or None\n            - Pass a custom file detector object during instantiation. If None, the default\n                LocalFileDetector() will be used.\n        options : options.Options\n            - Instance of a driver options.Options class.\n        locator_converter : object or None\n            - Custom locator converter to use. Defaults to None.\n        web_element_cls : class\n            - Custom class to use for web elements. Defaults to WebElement.\n        client_config : object or None\n            - Custom client configuration to use. Defaults to None.\n        \"\"\"\n    \n        if options is None:\n>           raise TypeError(\n                \"missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\"\nE               TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:233: TypeError"}, "start": 1757829394314, "stop": 1757829394314, "uuid": "48db3a67-31c0-479a-b47e-df28ec9c6888", "historyId": "ab68c09e23714aa68c720c2ca07c0ecf", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "14580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}