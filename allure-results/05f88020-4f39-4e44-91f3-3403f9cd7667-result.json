{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'to_capabilities'", "trace": "request = <SubRequest 'driver' for <Function test_valid_login>>\n\n    @pytest.fixture(scope='function')\n    def driver(request):\n        platform = os.getenv('TEST_PLATFORM', 'android').lower()\n        if platform == 'ios':\n>           drv = _create_ios_driver(\n                device_name=os.getenv('IOS_DEVICE_NAME', 'iPhone 15 Pro'),\n                platform_version=os.getenv('IOS_PLATFORM_VERSION', '17.0'),\n                app_id=os.getenv('IOS_APP_ID')\n\nconftest.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:36: in _create_ios_driver\n    return webdriver.Remote('https://hub.browserstack.com/wd/hub', caps)\n.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:229: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x21a40692660>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x0000021A406927B0>, keep_alive = True\nfile_detector = None, options = None\n\n    def __init__(\n        self,\n        command_executor=\"http://127.0.0.1:4444\",\n        keep_alive=True,\n        file_detector=None,\n        options: Union[BaseOptions, List[BaseOptions]] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        :Args:\n         - command_executor - Either a string representing URL of the remote server or a custom\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\n             HTTP keep-alive. Defaults to True.\n         - file_detector - Pass custom file detector object during instantiation. If None,\n             then default LocalFileDetector() will be used.\n         - options - instance of a driver options.Options class\n        \"\"\"\n    \n        if isinstance(options, list):\n            capabilities = create_matches(options)\n            _ignore_local_proxy = False\n        else:\n>           capabilities = options.to_capabilities()\nE           AttributeError: 'NoneType' object has no attribute 'to_capabilities'\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:185: AttributeError"}, "start": 1757912173533, "stop": 1757912173533, "uuid": "46b438b1-8fc3-48f5-964e-ef1224940977", "historyId": "ab68c09e23714aa68c720c2ca07c0ecf", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "17704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}