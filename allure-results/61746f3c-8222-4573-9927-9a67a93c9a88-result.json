{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "RuntimeError: All attempts to create Remote driver failed. Last error: TypeError: WebDriver.__init__() got an unexpected keyword argument 'desired_capabilities'", "trace": "request = <SubRequest 'driver' for <Function test_valid_login>>\n\n    @pytest.fixture(scope='function')\n    def driver(request):\n        platform = os.getenv('TEST_PLATFORM', 'android').lower()\n        if platform == 'ios':\n>           drv = _create_ios_driver(\n                device_name=os.getenv('IOS_DEVICE_NAME', 'iPhone 15 Pro'),\n                platform_version=os.getenv('IOS_PLATFORM_VERSION', '17.0'),\n                app_id=os.getenv('IOS_APP_ID')\n\nconftest.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:72: in _create_ios_driver\n    driver, method = _try_create_remote('https://hub.browserstack.com/wd/hub', caps)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nurl = 'https://hub.browserstack.com/wd/hub'\ncaps = {'app': 'bs://9581df6f6fc7a7eb1dfe7623bf80b90d563ac408', 'automationName': 'XCUITest', 'bstack:options': {'accessKey':...me': 'ios-build', 'projectName': 'mobile-demo', 'sessionName': 'iOS session', ...}, 'deviceName': 'iPhone 15 Pro', ...}\n\n    def _try_create_remote(url, caps):\n        last_exc = None\n    \n        # 1) Try desired_capabilities keyword (older clients)\n        try:\n            drv = webdriver.Remote(url, desired_capabilities=caps)\n            print('webdriver.Remote succeeded with desired_capabilities=caps')\n            return drv, 'desired_capabilities'\n        except Exception as e:\n            last_exc = e\n    \n        # 2) Try passing caps positionally (some client versions accept this)\n        try:\n            drv = webdriver.Remote(url, caps)\n            print('webdriver.Remote succeeded with caps as positional arg')\n            return drv, 'positional_caps'\n        except Exception as e:\n            last_exc = e\n    \n        # 3) Try selenium.webdriver.Remote as a last resort\n        try:\n            from selenium import webdriver as selenium_webdriver\n            drv = selenium_webdriver.Remote(command_executor=url, desired_capabilities=caps)\n            print('selenium.webdriver.Remote succeeded with desired_capabilities')\n            return drv, 'selenium_desired_capabilities'\n        except Exception as e:\n            last_exc = e\n    \n        tb = ''.join(traceback.format_exception_only(type(last_exc), last_exc))\n>       raise RuntimeError('All attempts to create Remote driver failed. Last error: {}'.format(tb))\nE       RuntimeError: All attempts to create Remote driver failed. Last error: TypeError: WebDriver.__init__() got an unexpected keyword argument 'desired_capabilities'\n\nconftest.py:59: RuntimeError"}, "start": 1757912398767, "stop": 1757912398767, "uuid": "ba557634-e59d-45bf-93b0-f2014cfdaaa6", "historyId": "ab68c09e23714aa68c720c2ca07c0ecf", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "7044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}