{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "TypeError: WebDriver.__init__() got an unexpected keyword argument 'desired_capabilities'", "trace": "request = <SubRequest 'driver' for <Function test_valid_login>>\n\n    @pytest.fixture(scope=\"function\")\n    def driver(request):\n        \"\"\"Fixture to create and tear down a BrowserStack Appium driver.\"\"\"\n        hub = os.environ.get(\"BS_HUB\", \"http://hub-cloud.browserstack.com/wd/hub\")\n        platform = os.environ.get(\"PLATFORM\", \"android\").lower()\n    \n        caps = {\n            \"platformName\": \"Android\" if platform == \"android\" else \"iOS\",\n            \"deviceName\": os.environ.get(\"BS_DEVICE\", \"Samsung Galaxy S22\" if platform == \"android\" else \"iPhone 14\"),\n            \"platformVersion\": os.environ.get(\"BS_PLATFORM_VERSION\", \"12.0\" if platform == \"android\" else \"16\"),\n            \"app\": os.environ.get(\n                \"BROWSERSTACK_APP\",\n                \"bs://06cff65c394b08d3fd0b3e93bfb23d612589f234\"\n            ),\n            \"automationName\": \"UiAutomator2\" if platform == \"android\" else \"XCUITest\",\n            \"browserstack.user\": os.environ.get(\"BROWSERSTACK_USER\", \"sandeep_y6l5vm\"),\n            \"browserstack.key\": os.environ.get(\"BROWSERSTACK_KEY\", \"9WrWAvFqpmhBcJggzJzy\"),\n            \"project\": \"Mobile Demo\",\n            \"build\": f\"{platform.capitalize()} Build\",\n            \"name\": request.node.name,\n        }\n    \n>       drv = create_remote(hub, caps)\n\nconftest.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhub = 'http://hub-cloud.browserstack.com/wd/hub'\ncaps = {'app': 'bs://06cff65c394b08d3fd0b3e93bfb23d612589f234', 'automationName': 'UiAutomator2', 'browserstack.key': '9WrWAvFqpmhBcJggzJzy', 'browserstack.user': 'sandeep_y6l5vm', ...}\n\n    def create_remote(hub: str, caps: dict):\n        \"\"\"\n        Create a webdriver.Remote session using the most compatible approach.\n        Preferred order:\n          1) UiAutomator2Options().load_capabilities(caps) -> options=\n          2) AppiumOptions() with set_capability -> options=\n          3) Fallback -> desired_capabilities=caps\n        \"\"\"\n        # 1) UiAutomator2Options path (Android-specific)\n        if UiAutomator2Options is not None:\n            try:\n                opts = UiAutomator2Options().load_capabilities(caps)\n                return webdriver.Remote(command_executor=hub, options=opts)\n            except Exception:\n                # continue to next fallback\n                pass\n    \n        # 2) Generic AppiumOptions path\n        if AppiumOptions is not None:\n            try:\n                opts = AppiumOptions()\n                for k, v in caps.items():\n                    try:\n                        opts.set_capability(k, v)\n                    except Exception:\n                        try:\n                            opts[k] = v\n                        except Exception:\n                            pass\n                return webdriver.Remote(command_executor=hub, options=opts)\n            except Exception:\n                pass\n    \n        # 3) Last-resort fallback: pass caps as desired_capabilities\n>       return webdriver.Remote(command_executor=hub, desired_capabilities=caps)\nE       TypeError: WebDriver.__init__() got an unexpected keyword argument 'desired_capabilities'\n\nconftest.py:58: TypeError"}, "start": 1758099422216, "stop": 1758099422216, "uuid": "85e55434-7701-4209-88dd-239903a4cfca", "historyId": "27b150db6705ef6511c7ecb21ff68d02", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "21496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}