{"name": "test_open_product_and_verify", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (/nix/store/7gcl75xhklpjnw78s382pkyxgviyrsk4-appium-1.22.0/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.js:75:11)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"97a443e59db630e3630d005c686ac26d20b8ffb2\")>\n\n    @pytest.mark.smoke\n    def test_open_product_and_verify(driver):\n        lp = LoginPage(driver)\n        lp.login(\"standard_user\", \"secret_sauce\")\n        assert lp.is_logged_in()\n    \n        pp = ProductPage(driver)\n        # Verify catalog loaded (presence of header)\n        assert pp.find(pp.products_header())\n    \n        title = pp.get_first_product_title_text()\n        price = pp.get_first_product_price_text()\n        assert title, \"Could not read first product title\"\n        assert price, \"Could not read first product price\"\n    \n        # Open details and verify\n        pp.open_first_product()\n    \n        # On details use product_detail_title/price\n>       detail_title_el = pp.find(pp.product_detail_title())\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_products.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:20: in find\n    return wait.until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"97a443e59db630e3630d005c686ac26d20b8ffb2\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000148F0EC18A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (/nix/store/7gcl75xhklpjnw78s382pkyxgviyrsk4-appium-1.22.0/node_modules/appium-uiautomator2-driver/node_modules/appium-android-driver/lib/commands/find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "screenshot-android", "source": "59510eaf-ff78-4682-8ef1-63a80e2d3e68-attachment.png", "type": "image/png"}], "start": 1757841380166, "stop": 1757841402702, "uuid": "e71226ed-56f3-410a-b28a-88a2fc0faa96", "historyId": "73842bc6bc3e86743f49bd37be75db47", "testCaseId": "73842bc6bc3e86743f49bd37be75db47", "fullName": "tests.test_products#test_open_product_and_verify", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "14392-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products"}], "titlePath": ["tests", "test_products.py"]}