{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a real number, not 'WebDriverWait'", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"def0ffb7e06722059dc984f3d15f1fd5283c5eb3\")>\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"def0ffb7e06722059dc984f3d15f1fd5283c5eb3\")>\n\n    @pytest.mark.smoke\n    def test_valid_login(driver, wait):\n>       login_page = LoginPage(driver, wait)\n\ntests\\test_login.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:9: in __init__\n    self.wait = WebDriverWait(driver, timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"def0ffb7e06722059dc984f3d15f1fd5283c5eb3\")>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"def0ffb7e06722059dc984f3d15f1fd5283c5eb3\")>\ntimeout = <selenium.webdriver.support.wait.WebDriverWait (session=\"def0ffb7e06722059dc984f3d15f1fd5283c5eb3\")>\npoll_frequency = 0.5, ignored_exceptions = None\n\n    def __init__(\n        self,\n        driver: D,\n        timeout: float,\n        poll_frequency: float = POLL_FREQUENCY,\n        ignored_exceptions: Optional[WaitExcTypes] = None,\n    ):\n        \"\"\"Constructor, takes a WebDriver instance and timeout in seconds.\n    \n        Attributes:\n        -----------\n        driver\n            - Instance of WebDriver (Ie, Firefox, Chrome or Remote) or\n            a WebElement\n    \n        timeout\n            - Number of seconds before timing out\n    \n        poll_frequency\n            - Sleep interval between calls\n            - By default, it is 0.5 second.\n    \n        ignored_exceptions\n            - Iterable structure of exception classes ignored during calls.\n            - By default, it contains NoSuchElementException only.\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.wait import WebDriverWait\n        >>> from selenium.common.exceptions import ElementNotVisibleException\n        >>>\n        >>> # Wait until the element is no longer visible\n        >>> is_disappeared = WebDriverWait(driver, 30, 1, (ElementNotVisibleException))\n        ...     .until_not(lambda x: x.find_element(By.ID, \"someId\").is_displayed())\n        \"\"\"\n        self._driver = driver\n>       self._timeout = float(timeout)\nE       TypeError: float() argument must be a string or a real number, not 'WebDriverWait'\n\nC:\\Users\\db595\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:71: TypeError"}, "start": 1758104986768, "stop": 1758104986768, "uuid": "6e3db888-2f92-416a-97fd-3794a27c11d8", "historyId": "27b150db6705ef6511c7ecb21ff68d02", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "3588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}